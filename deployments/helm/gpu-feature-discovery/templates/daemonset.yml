# Copyright (c) 2019, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "gpu-feature-discovery.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "gpu-feature-discovery.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "gpu-feature-discovery.selectorLabels" . | nindent 6 }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "gpu-feature-discovery.selectorLabels" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      # Mark this pod as a critical add-on; when enabled, the critical add-on
      # scheduler reserves resources for critical add-on pods so that they can
      # be rescheduled after a failure.
      # See https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
      priorityClassName: "system-node-critical"
      {{- if .Values.runtimeClassName }}
      runtimeClassName: {{ .Values.runtimeClassName }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - image: {{ include "gpu-feature-discovery.fullimage" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: gpu-feature-discovery
          env:
            - name: GFD_FAIL_ON_INIT_ERROR
              value: "{{ .Values.failOnInitError }}"
            - name: GFD_MIG_STRATEGY
              value: "{{ .Values.migStrategy }}"
            - name: GFD_NO_TIMESTAMP
              value: "{{ .Values.noTimestamp}}"
            - name: GFD_SLEEP_INTERVAL
              value: "{{ .Values.sleepInterval }}"
          {{- if ne .Values.migStrategy "none" }}
            - name: NVIDIA_MIG_MONITOR_DEVICES
              value: all
          {{- end }}
          securityContext:
          {{- if and (ne .Values.migStrategy "none") (eq (len .Values.securityContext) 0) }}
            capabilities:
              add:
                - SYS_ADMIN
          {{- else }}
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: output-dir
              mountPath: "/etc/kubernetes/node-feature-discovery/features.d"
            - name: dmi-product-name
              mountPath: "/sys/class/dmi/id/product_name"
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 10 }}
          {{- end }}
      volumes:
        - name: output-dir
          hostPath:
            path: "/etc/kubernetes/node-feature-discovery/features.d"
        - name: dmi-product-name
          hostPath:
            path: "/sys/class/dmi/id/product_name"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
